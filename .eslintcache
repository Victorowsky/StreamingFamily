[{"G:\\SF-react-node\\sf-react\\src\\index.js":"1","G:\\SF-react-node\\sf-react\\src\\App.js":"2","G:\\SF-react-node\\sf-react\\src\\comp\\Homepage.js":"3","G:\\SF-react-node\\sf-react\\src\\comp\\StreamingOffer.js":"4","G:\\SF-react-node\\sf-react\\src\\comp\\Title.js":"5","G:\\SF-react-node\\sf-react\\src\\comp\\Netflix.js":"6","G:\\SF-react-node\\sf-react\\src\\comp\\Spotify.js":"7","G:\\SF-react-node\\sf-react\\src\\comp\\Party.js":"8","G:\\SF-react-node\\sf-react\\src\\comp\\SignUp\\ButtonSignUp.js":"9","G:\\SF-react-node\\sf-react\\src\\comp\\SignUp\\SignUp.js":"10","G:\\SF-react-node\\sf-react\\src\\comp\\SignUp\\ErrorSnackbar.js":"11"},{"size":305,"mtime":1609612675810,"results":"12","hashOfConfig":"13"},{"size":1681,"mtime":1609766160368,"results":"14","hashOfConfig":"13"},{"size":505,"mtime":1609606670166,"results":"15","hashOfConfig":"13"},{"size":649,"mtime":1609617949518,"results":"16","hashOfConfig":"13"},{"size":560,"mtime":1609607087296,"results":"17","hashOfConfig":"13"},{"size":877,"mtime":1609695998721,"results":"18","hashOfConfig":"13"},{"size":130,"mtime":1609613465682,"results":"19","hashOfConfig":"13"},{"size":846,"mtime":1609617932944,"results":"20","hashOfConfig":"13"},{"size":706,"mtime":1609766163063,"results":"21","hashOfConfig":"13"},{"size":3242,"mtime":1609761378285,"results":"22","hashOfConfig":"13"},{"size":1067,"mtime":1609761451011,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1b6twtz",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},"G:\\SF-react-node\\sf-react\\src\\index.js",[],["49","50"],"G:\\SF-react-node\\sf-react\\src\\App.js",[],"G:\\SF-react-node\\sf-react\\src\\comp\\Homepage.js",[],"G:\\SF-react-node\\sf-react\\src\\comp\\StreamingOffer.js",[],"G:\\SF-react-node\\sf-react\\src\\comp\\Title.js",[],"G:\\SF-react-node\\sf-react\\src\\comp\\Netflix.js",[],"G:\\SF-react-node\\sf-react\\src\\comp\\Spotify.js",[],"G:\\SF-react-node\\sf-react\\src\\comp\\Party.js",[],"G:\\SF-react-node\\sf-react\\src\\comp\\SignUp\\ButtonSignUp.js",[],"G:\\SF-react-node\\sf-react\\src\\comp\\SignUp\\SignUp.js",["51"],"import \"./SignUp.css\";\r\nimport { useState } from \"react\";\r\nimport ButtonSignUp from \"./ButtonSignUp\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Error from \"./ErrorSnackbar\";\r\n\r\nconst SignUp = ({ socket }) => {\r\n  const [name, setName] = useState();\r\n  const [username, setUsername] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [email, setEmail] = useState();\r\n  const [SignUpAnswer, setSignUpAnswer] = useState(false);\r\n\r\n  const [isHover, setIsHover] = useState(false);\r\n\r\n  const buttonStyle = {\r\n    borderColor: \"black\",\r\n    width: \"fit-content\",\r\n    alignSelf: \"center\",\r\n  };\r\n\r\n  const buttonStyleHover = {\r\n    borderColor: \"#4361ee\",\r\n    width: \"fit-content\",\r\n    alignSelf: \"center\",\r\n    backgroundColor: \"#4361ee\",\r\n  };\r\n\r\n  const handleSignUp = () => {\r\n    if (name && username && password && email) {\r\n      if (!email.includes(\"@\")) {\r\n        console.log(\"BÅ‚ad\");\r\n        return false;\r\n      }\r\n\r\n      socket.emit(\"SignUpData\", {\r\n        name,\r\n        username,\r\n        password,\r\n        email,\r\n      });\r\n      setName(\"\");\r\n      setUsername(\"\");\r\n      setPassword(\"\");\r\n      setEmail(\"\");\r\n    }\r\n  };\r\n\r\n\r\n  socket.on(\"SignUpAnswer\", (answer) => {\r\n    setSignUpAnswer(answer.success);\r\n  });\r\n\r\n  return (\r\n    <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n      <div className=\"signInContainer\">\r\n        <h1>Create free account</h1>\r\n        <div className=\"signUp\">\r\n          <form autoComplete=\"off\" className=\"forms\">\r\n            <input\r\n              autoComplete=\"nope\"\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n              placeholder=\"Name\"\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"username\"\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n              placeholder=\"Username\"\r\n            />\r\n            <input\r\n              autoComplete=\"off\"\r\n              type=\"password\"\r\n              name=\"password\"\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              value={password}\r\n              placeholder=\"Password\"\r\n            />\r\n            <input\r\n              autoComplete=\"off\"\r\n              type=\"email\"\r\n              name=\"email\"\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              value={email}\r\n              placeholder=\"Email\"\r\n            />\r\n            <button\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                handleSignUp();\r\n              }}\r\n              style={{ display: \"none\" }}\r\n              type=\"submit\"\r\n            ></button>\r\n            <Button\r\n              onMouseOver={() => setIsHover(true)}\r\n              onMouseOut={() => {\r\n                setIsHover(false);\r\n              }}\r\n              variant=\"outlined\"\r\n              style={isHover ? buttonStyleHover : buttonStyle}\r\n              onClick={handleSignUp}\r\n            >\r\n              Create Account\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      <Error SignUpAnswer={SignUpAnswer} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","G:\\SF-react-node\\sf-react\\src\\comp\\SignUp\\ErrorSnackbar.js",["52","53"],"import React from \"react\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function CustomizedSnackbars({SignUpAnswer}) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Snackbar open={SignUpAnswer} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={()=>SignUpAnswer(false)} severity=\"error\">\r\n          This is an error message!\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n}\r\n",{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":3,"column":8,"nodeType":"60","messageId":"61","endLine":3,"endColumn":20},{"ruleId":"58","severity":1,"message":"62","line":21,"column":10,"nodeType":"60","messageId":"61","endLine":21,"endColumn":14},{"ruleId":"58","severity":1,"message":"63","line":23,"column":9,"nodeType":"60","messageId":"61","endLine":23,"endColumn":20},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"no-unused-vars","'ButtonSignUp' is defined but never used.","Identifier","unusedVar","'open' is assigned a value but never used.","'handleClick' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]