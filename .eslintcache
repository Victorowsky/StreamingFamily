[{"G:\\SF-react-node\\sf-react\\src\\index.js":"1","G:\\SF-react-node\\sf-react\\src\\App.js":"2","G:\\SF-react-node\\sf-react\\src\\comp\\Homepage.js":"3","G:\\SF-react-node\\sf-react\\src\\comp\\StreamingOffer.js":"4","G:\\SF-react-node\\sf-react\\src\\comp\\Title.js":"5","G:\\SF-react-node\\sf-react\\src\\comp\\Party.js":"6","G:\\SF-react-node\\sf-react\\src\\comp\\SignUp\\SignUp.js":"7","G:\\SF-react-node\\sf-react\\src\\comp\\SignUp\\ErrorSnackbar.js":"8","G:\\SF-react-node\\sf-react\\src\\comp\\SignUp\\Checkbox.js":"9","G:\\SF-react-node\\sf-react\\src\\comp\\SignUp\\SuccessSnackbar.js":"10","G:\\SF-react-node\\sf-react\\src\\comp\\Login\\Login.js":"11","G:\\SF-react-node\\sf-react\\src\\comp\\SignUp\\Button.js":"12","G:\\SF-react-node\\sf-react\\src\\comp\\Account\\Account.js":"13","G:\\SF-react-node\\sf-react\\src\\comp\\SignUp\\ConfirmAccount.js":"14","G:\\SF-react-node\\sf-react\\src\\comp\\Account\\AccountInfo.js":"15","G:\\SF-react-node\\sf-react\\src\\comp\\Account\\ChangePassword.js":"16","G:\\SF-react-node\\sf-react\\src\\comp\\Account\\ChangeEmail.js":"17","G:\\SF-react-node\\sf-react\\src\\comp\\Progress.js":"18","G:\\SF-react-node\\sf-react\\src\\comp\\MyParties.js":"19","G:\\SF-react-node\\sf-react\\src\\comp\\Loadings\\Loading.js":"20","G:\\SF-react-node\\sf-react\\src\\comp\\StreamingPlatformComp.js":"21"},{"size":305,"mtime":1609612675810,"results":"22","hashOfConfig":"23"},{"size":3391,"mtime":1610791292369,"results":"24","hashOfConfig":"23"},{"size":2974,"mtime":1610790648065,"results":"25","hashOfConfig":"23"},{"size":649,"mtime":1609617949518,"results":"26","hashOfConfig":"23"},{"size":749,"mtime":1610474378130,"results":"27","hashOfConfig":"23"},{"size":1689,"mtime":1610791428495,"results":"28","hashOfConfig":"23"},{"size":5439,"mtime":1610474505614,"results":"29","hashOfConfig":"23"},{"size":1185,"mtime":1610130211878,"results":"30","hashOfConfig":"23"},{"size":472,"mtime":1609843084570,"results":"31","hashOfConfig":"23"},{"size":1249,"mtime":1610130218612,"results":"32","hashOfConfig":"23"},{"size":4195,"mtime":1610738716695,"results":"33","hashOfConfig":"23"},{"size":786,"mtime":1610301020296,"results":"34","hashOfConfig":"23"},{"size":1578,"mtime":1610480937400,"results":"35","hashOfConfig":"23"},{"size":1529,"mtime":1610359659375,"results":"36","hashOfConfig":"23"},{"size":940,"mtime":1610222582261,"results":"37","hashOfConfig":"23"},{"size":3066,"mtime":1610282738234,"results":"38","hashOfConfig":"23"},{"size":2819,"mtime":1610282750668,"results":"39","hashOfConfig":"23"},{"size":548,"mtime":1610319850645,"results":"40","hashOfConfig":"23"},{"size":3681,"mtime":1610639387357,"results":"41","hashOfConfig":"23"},{"size":492,"mtime":1610738189670,"results":"42","hashOfConfig":"23"},{"size":5273,"mtime":1610791860034,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1b6twtz",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"G:\\SF-react-node\\sf-react\\src\\index.js",[],["88","89"],"G:\\SF-react-node\\sf-react\\src\\App.js",[],"G:\\SF-react-node\\sf-react\\src\\comp\\Homepage.js",[],"G:\\SF-react-node\\sf-react\\src\\comp\\StreamingOffer.js",[],"G:\\SF-react-node\\sf-react\\src\\comp\\Title.js",[],"G:\\SF-react-node\\sf-react\\src\\comp\\Party.js",[],"G:\\SF-react-node\\sf-react\\src\\comp\\SignUp\\SignUp.js",[],"G:\\SF-react-node\\sf-react\\src\\comp\\SignUp\\ErrorSnackbar.js",[],"G:\\SF-react-node\\sf-react\\src\\comp\\SignUp\\Checkbox.js",[],"G:\\SF-react-node\\sf-react\\src\\comp\\SignUp\\SuccessSnackbar.js",[],"G:\\SF-react-node\\sf-react\\src\\comp\\Login\\Login.js",[],"G:\\SF-react-node\\sf-react\\src\\comp\\SignUp\\Button.js",[],"G:\\SF-react-node\\sf-react\\src\\comp\\Account\\Account.js",[],"G:\\SF-react-node\\sf-react\\src\\comp\\SignUp\\ConfirmAccount.js",[],"G:\\SF-react-node\\sf-react\\src\\comp\\Account\\AccountInfo.js",[],"G:\\SF-react-node\\sf-react\\src\\comp\\Account\\ChangePassword.js",[],"G:\\SF-react-node\\sf-react\\src\\comp\\Account\\ChangeEmail.js",[],"G:\\SF-react-node\\sf-react\\src\\comp\\Progress.js",[],"G:\\SF-react-node\\sf-react\\src\\comp\\MyParties.js",["90"],"import \"./MyParties.css\"\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"./SignUp/Button\"\r\nimport {DataContext} from \"../App\"\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport Party from \"./Party\"\r\n\r\n\r\nconst MyParties = () => {\r\n\r\n    const {userData,socket} = useContext(DataContext)\r\n    const [myPartiesData, setMyPartiesData] = useState([])\r\n\r\n\r\n    useEffect(()=>{\r\n        socket.emit('getMyParties', userData.myParties)\r\n\r\n          return ()=>{\r\n            setMyPartiesData([])\r\n          }\r\n    },[])\r\n\r\n    socket.on('getMyPartiesAnswer', (partiesAnswer)=>{\r\n    setMyPartiesData(partiesAnswer)\r\n    })\r\n    \r\n    const netflixParties = myPartiesData.filter((party)=>party.streamingPlatform ===\"Netflix\")\r\n\r\n    const spotifyParties = myPartiesData.filter((party)=>party.streamingPlatform ===\"Spotify\")\r\n\r\n\r\n\r\n\r\n    const netflixParitesList = netflixParties.map((party) => {\r\n        let color\r\n        // CHOOSE RIGTH COLOR FOR ALL PLATFORMS\r\n       switch (party.streamingPlatform) {\r\n            case 'Netflix':\r\n                color = \"#e50914\"\r\n                break;\r\n            case 'Spotify':\r\n                color = '#1DB954'\r\n                break;\r\n\r\n            case 'HBO GO':\r\n                color= 'white'\r\n                break ;\r\n            case 'Disney +':\r\n                color= '#113CCF'\r\n                break;\r\n            default:\r\n                color=\"white\"\r\n                break;\r\n        }\r\n       return (\r\n        <Party\r\n          key={party._id}\r\n          partyID={party._id}\r\n          name={party.partyName}\r\n          text={party.textContent}\r\n          users={party.users}\r\n          maxUsers={party.maxUsers}\r\n          creator={party.creatorUsername}\r\n          dateCreated={party.dateCreated}\r\n          color={color}\r\n        />\r\n      )});\r\n\r\n      const spotifyParitesList = spotifyParties.map((party) => {\r\n        let color\r\n        // CHOOSE RIGTH COLOR FOR ALL PLATFORMS\r\n       switch (party.streamingPlatform) {\r\n            case 'Netflix':\r\n                color = \"#e50914\"\r\n                break;\r\n            case 'Spotify':\r\n                color = '#1DB954'\r\n                break;\r\n\r\n            case 'HBO GO':\r\n                color= 'white'\r\n                break ;\r\n            case 'Disney +':\r\n                color= '#113CCF'\r\n                break;\r\n            default:\r\n                color=\"white\"\r\n                break;\r\n        }\r\n       return (\r\n        <Party\r\n          key={party._id}\r\n          partyID={party._id}\r\n          name={party.partyName}\r\n          text={party.textContent}\r\n          users={party.users}\r\n          maxUsers={party.maxUsers}\r\n          creator={party.creatorUsername}\r\n          dateCreated={party.dateCreated}\r\n          color={color}\r\n        />\r\n      )});\r\n\r\n    return ( \r\n        <>\r\n        <div className=\"header\">\r\n          <Link to=\"/\">\r\n            <Button variant=\"outlined\" text={\"Back\"} />\r\n          </Link>\r\n        </div>\r\n        <div className=\"myPartiesContent\">\r\n            <div className=\"myParties\">\r\n              {/* {myPartiesList ? myPartiesList : `Join to party first`}   */}\r\n               \r\n            {netflixParitesList &&   \r\n            <>\r\n            <h2>Netflix :</h2>\r\n\r\n              <div className=\"MyPartiesRow\">\r\n              {netflixParitesList}\r\n              </div>\r\n              </>\r\n              }\r\n              \r\n           {spotifyParitesList && <> <h2>Spotify:</h2>\r\n          <div className=\"MyPartiesRow\">\r\n              {spotifyParitesList}\r\n        </div></>}\r\n            \r\n\r\n            </div>\r\n        </div>\r\n        </>\r\n     );\r\n}\r\n \r\nexport default MyParties;","G:\\SF-react-node\\sf-react\\src\\comp\\Loadings\\Loading.js",[],"G:\\SF-react-node\\sf-react\\src\\comp\\StreamingPlatformComp.js",[],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":21,"column":7,"nodeType":"97","endLine":21,"endColumn":9,"suggestions":"98"},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'socket' and 'userData.myParties'. Either include them or remove the dependency array.","ArrayExpression",["101"],"no-global-assign","no-unsafe-negation",{"desc":"102","fix":"103"},"Update the dependencies array to be: [socket, userData.myParties]",{"range":"104","text":"105"},[538,540],"[socket, userData.myParties]"]