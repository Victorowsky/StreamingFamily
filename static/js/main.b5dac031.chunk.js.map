{"version":3,"sources":["comp/StreamingOffer.js","comp/Title.js","comp/SignUp/Button.js","comp/Homepage.js","comp/SignUp/ErrorSnackbar.js","comp/SignUp/Checkbox.js","comp/SignUp/SignUp.js","comp/Loadings/Loading.js","comp/Login/Login.js","comp/Account/AccountInfo.js","comp/Account/ChangePassword.js","comp/Account/ChangeEmail.js","comp/Account/Account.js","comp/Party.js","comp/MyParties/MyPartiesSchema.js","comp/MyParties/MyParties.js","comp/SignUp/ConfirmAccount.js","comp/SignUp/SuccessSnackbar.js","comp/Progress.js","comp/MyParties/Dialog.js","comp/StreamingPlatformComp.js","comp/MyParties/Message.js","comp/MyParties/Chat.js","comp/MyParties/PartyInfo.js","comp/LoginPage.js","comp/Account/RemindPassword.js","App.js","index.js"],"names":["StreamingOffer","name","color","useState","isHovered","setIsHovered","hoverStyle","boxShadow","borderColor","to","className","onMouseOver","onMouseLeave","style","Title","text","animatedText","setAnimatedText","Array","from","useEffect","timeouts","forEach","element","index","timeoutIndex","setTimeout","prev","push","timeout","clearTimeout","useStyles","makeStyles","theme","root","transtion","margin","width","backgroundColor","OutlinedButtons","onClick","classes","Button","variant","Homepage","useContext","DataContext","nickname","setUserID","setUserData","setNickname","socket","userID","phoneVersion","setPhoneVersion","emit","window","innerWidth","addEventListener","handleLogOut","Cookies","remove","IconButton","Alert","props","elevation","marginTop","spacing","CustomizedSnackbars","setIsError","isError","errorMessage","Snackbar","open","autoHideDuration","onClose","event","reason","severity","Checkboxes","setChecked","checked","Checkbox","onChange","target","inputProps","SignUp","setIsSuccess","setSuccessMessage","setErrorMessage","setName","username","setUsername","password","setPassword","checkPassword","setCheckPassword","email","setEmail","history","useHistory","isHover","setIsHover","anime","targets","scale","duration","handleSignUp","includes","length","on","answer","success","message","set","expires","display","flexDirection","autoComplete","type","value","e","placeholder","preventDefault","onMouseOut","disabled","alignSelf","marginLeft","CircularIndeterminate","CircularProgress","Login","turnOffBack","setIsLoginPage","loginContainer","useRef","isLoading","setIsLoading","handleLogin","ID","current","transition","ref","AccountInfo","userData","accountCreated","isVerified","ChangePassowrd","oldPassword","setOldPassword","newPassword","setNewPassword","code","setCode","changePasswordClicked","setChangePasswordClicked","handleChangePassword","height","padding","newEmail","setNewEmail","changeEmailClicked","setChangeEmailClicked","handleChangeEmail","Profile","whichContent","setWhichContent","textContent","handleSetRightPanel","Party","users","maxUsers","dateCreated","creator","partyID","join","joinButton","dataset","id","data-id","fontSize","MyPartiesSchema","parties","streamingPlatform","MyParties","myPartiesData","setMyPartiesData","myParties","partiesAnswer","netflixParties","spotifyParties","hbogoParties","disneyParties","party","console","log","map","_id","partyName","creatorUsername","ConfirmAccount","ValidateToken","setValidateToken","redirect","setRedirect","handleSendCode","isSuccess","successMessage","justifyContent","usersCopy","StreamingPlatformComp","isCreatePartyContainer","setIsCreatePartyContainer","setText","setMaxUsers","partiesData","setPartiesData","handleCreateParty","setPartyName","createPartyContainer","docs","addedParty","deletedIndex","partyChanged","oldPartiesData","filter","splice","list","contains","max","min","Message","time","myMessage","title","borderRadius","Chat","chat","chatRef","createMessages","scrollTo","top","scrollHeight","emails","avatar","blue","SimpleDialog","selectedValue","Dialog","aria-labelledby","DialogTitle","List","user","ListItem","button","ListItemAvatar","Avatar","ListItemText","primary","SimpleDialogDemo","React","setOpen","setSelectedValue","PartyInfo","useParams","partyData","setPartyData","setMessage","handleSendMessage","LoginPage","forgotPasswordCompRef","forgotPasswordComp","setForgotPasswordComp","handleSendForgotPasswordEmail","handleCloseForgotPasswordComp","RemindPassword","passwordConfirm","setPasswordConfirm","tempUserID","setTempUserID","handlePasswordChange","io","createContext","App","isLoginPage","data","get","Provider","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b5dac031.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst StreamingOffer = ({ name, color }) => {\r\n  const [isHovered, setIsHovered] = useState();\r\n\r\n  const hoverStyle = {\r\n    boxShadow: `2px 2px 20px ${color}`,\r\n    borderColor: color,\r\n  };\r\n  const style = {};\r\n\r\n  return (\r\n    <>\r\n      <Link to={name}>\r\n        <div\r\n          className=\"square\"\r\n          onMouseOver={() => setIsHovered(true)}\r\n          onMouseLeave={() => setIsHovered(false)}\r\n          style={isHovered ? hoverStyle : style}\r\n        >\r\n          {name}\r\n        </div>\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StreamingOffer;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nconst Title = () => {\r\n  let text = \"Find your streaming family.\";\r\n  const [animatedText, setAnimatedText] = useState(\"\");\r\n  text = Array.from(text);\r\n  useEffect(() => {\r\n    const timeouts =[]\r\n\r\n    setAnimatedText(\"\");\r\n    text.forEach((element, index) => {\r\n     const timeoutIndex =  setTimeout(() => {\r\n        setAnimatedText((prev) => (prev += element));\r\n      }, 100 * index);\r\n      timeouts.push(timeoutIndex)\r\n    });\r\n\r\n\r\n    return ()=>{\r\n      timeouts.forEach((timeout)=>{\r\n        clearTimeout(timeout)\r\n      })\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return <div className=\"title\">{animatedText}</div>;\r\n};\r\n\r\nexport default Title;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      borderColor: \"white\",\r\n      color: \"white\",\r\n      transtion: \"1s\",\r\n      margin: '5px',\r\n      width:'fit-content'\r\n    },\r\n    \"& > *:hover\": {\r\n      borderColor: \"white\",\r\n      boxShadow: \"0px 0px 10px white\",\r\n      backgroundColor: 'white',\r\n      color:'black',\r\n      width:'fit-content'\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function OutlinedButtons({ text, onClick, style  }) {\r\n  const classes = useStyles();  \r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Button style={style? style:{}} variant=\"outlined\" onClick={onClick}>\r\n        {text}\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n// style={style ? style : {}}","import StreamingOffer from \"./StreamingOffer\";\r\nimport Title from \"./Title\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"./SignUp/Button\";\r\nimport Cookies from \"js-cookie\";\r\nimport {DataContext} from '../App';\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\r\nimport LibraryBooksIcon from '@material-ui/icons/LibraryBooks';\r\nimport { IconButton } from '@material-ui/core';\r\n\r\n\r\nconst Homepage = () => {\r\nconst {nickname, setUserID, setUserData, setNickname, socket, userID} = useContext(DataContext)\r\n\r\n const [phoneVersion, setPhoneVersion] = useState(false)\r\n\r\n\r\n  useEffect(()=>{\r\n    socket.emit(\"CheckUserID\", userID);\r\n    if(window.innerWidth < 520){\r\n      setPhoneVersion(true)\r\n    }\r\n\r\n\r\n    window.addEventListener('resize', ()=>{\r\n      if(window.innerWidth < 520){\r\n        setPhoneVersion(true)\r\n      }else{\r\n        setPhoneVersion(false)\r\n      }\r\n    })\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  },[])\r\n\r\n  const handleLogOut = () => {\r\n    setNickname(null);\r\n    setUserID(null);\r\n    Cookies.remove(\"userID\");\r\n    setUserData(null)\r\n  };\r\n\r\n  return (\r\n    <>\r\n  {phoneVersion ?  // PHONE VERSION\r\n  <>\r\n  <div className=\"header\">\r\n  {!nickname ? (\r\n    <Link to=\"/login\">\r\n      <Button text={\"Login\"} />\r\n    </Link>\r\n  ) : (\r\n    <>\r\n    <Link to=\"/account\">\r\n           <IconButton>\r\n          <AccountBoxIcon style={{color:'white'}}/>\r\n    </IconButton>\r\n    </Link>\r\n    <Link to=\"/myparties\">\r\n    {/* <Button text={'My Parties'}/> */}\r\n    <IconButton>\r\n      <LibraryBooksIcon style={{color:'white'}}/>\r\n    </IconButton>\r\n    </Link>\r\n    </>\r\n  )}\r\n\r\n  {!nickname ? (\r\n    <Link to=\"/signup\">\r\n      <Button text={\"Sign Up\"} />\r\n\r\n    </Link>\r\n  ) : (\r\n    <IconButton>\r\n          <ExitToAppIcon style={{color:'white'}} onClick={handleLogOut}/>\r\n    </IconButton>\r\n  )}\r\n\r\n</div> \r\n</>\r\n: \r\n//          DESKTOP VERSION\r\n  \r\n  <div className=\"header\">\r\n  {!nickname ? (\r\n    <Link to=\"/login\">\r\n      <Button text={\"Login\"} />\r\n    </Link>\r\n  ) : (\r\n    <>\r\n    <Link to=\"/account\">\r\n      <Button text={nickname} />\r\n    </Link>\r\n    <Link to=\"/myparties\">\r\n    <Button text={'My Parties'}/>\r\n    </Link>\r\n    </>\r\n  )}\r\n\r\n  {!nickname ? (\r\n    <Link to=\"/signup\">\r\n      <Button text={\"Sign Up\"} />\r\n\r\n    </Link>\r\n  ) : (\r\n    <Button text={\"LogOut\"} onClick={handleLogOut} />\r\n  )}\r\n</div>\r\n  \r\n  }\r\n\r\n\r\n      <div className=\"content\">\r\n        <div className=\"homepage\">\r\n          <Title />\r\n          <div className=\"streamingOffers\">\r\n            <StreamingOffer name=\"Netflix\" color=\"#e50914\" />\r\n            <StreamingOffer name=\"Spotify\" color=\"#1DB954\" />\r\n            <StreamingOffer name=\"HBOGO\" color=\"white\" />\r\n            <StreamingOffer name=\"Disney+\" color=\"#113CCF\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Homepage;\r\n","import React, { useContext } from \"react\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {DataContext} from '../../App'\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function CustomizedSnackbars() {\r\n  const {setIsError, isError, errorMessage} = useContext(DataContext)\r\n\r\n  const classes = useStyles();\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setIsError(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Snackbar open={isError} autoHideDuration={4000} onClose={handleClose}>\r\n        <Alert onClose={()=>setIsError(false)} severity=\"error\">\r\n          {errorMessage}\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nexport default function Checkboxes({setChecked, checked}) {\r\n\r\n  const handleChange = (event) => {\r\n    setChecked(event.target.checked);\r\n  };\r\n\r\n  return (\r\n    <div >\r\n      <Checkbox\r\n        checked={checked}\r\n        onChange={handleChange}\r\n        inputProps={{ 'aria-label': 'primary checkbox' }}\r\n        color=\"primary\"\r\n      />\r\n     I accept everything.\r\n    </div>\r\n  );\r\n}\r\n","import \"./SignUp.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Button2 from \"@material-ui/core/Button\";\r\nimport { Link  } from \"react-router-dom\";\r\nimport Checkbox from \"./Checkbox\";\r\nimport anime from \"animejs/lib/anime.es.js\";\r\nimport Button from \"./Button\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {DataContext} from '../../App';\r\nimport { useContext } from \"react\";\r\nimport Cookies from 'js-cookie';\r\n\r\n\r\n\r\nconst SignUp = () => {\r\n  const {socket, setIsSuccess, setSuccessMessage, setUserID, setIsError,  setErrorMessage} = useContext(DataContext)\r\n\r\n  const [name, setName] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [checkPassword, setCheckPassword] = useState('')\r\n  const [email, setEmail] = useState('');\r\n  const [checked, setChecked] = useState(false);\r\n  const history = useHistory();\r\n\r\n\r\n  const [isHover, setIsHover] = useState(false);\r\n\r\n  const buttonStyleCreateAccount = {\r\n    marginTop: \"5px\",\r\n    color: \"black\",\r\n    borderColor: \"black\",\r\n    width: \"fit-content\",\r\n    alignSelf: \"center\",\r\n  };\r\n\r\n  const buttonStyleHoverCreateAccount = {\r\n    marginTop: \"5px\",\r\n    borderColor: \"#4361ee\",\r\n    width: \"fit-content\",\r\n    alignSelf: \"center\",\r\n    backgroundColor: \"#4361ee\",\r\n  };\r\n\r\n  useEffect(() => {\r\n    anime({\r\n      targets: \".signInContainer\",\r\n      scale: [0, 1],\r\n      duration: 2000,\r\n    });\r\n  }, []);\r\n\r\n  const handleSignUp = () => {\r\n    if (name && username && password && email && checkPassword) {\r\n      if (!email.includes(\"@\")) {\r\n        setErrorMessage(\"Check your email\");\r\n        return setIsError(true);\r\n      } else if (!checked) {\r\n        setErrorMessage(\"Accept everything\");\r\n        return setIsError(true);\r\n      } else if (password.length < 6) {\r\n        setErrorMessage(\"Password is to short\");\r\n        return setIsError(true);\r\n      } else if(password !== checkPassword){\r\n        setErrorMessage(\"Passwords are not the same\");\r\n        return setIsError(true);\r\n      }\r\n      socket.emit(\"SignUpData\", {\r\n        name,\r\n        username,\r\n        password,\r\n        email,\r\n      });\r\n    } else {\r\n      setIsError(true);\r\n    }\r\n  };\r\n\r\n  socket.on(\"SignUpAnswer\", (answer) => {\r\n    if (answer.success) {\r\n      setIsSuccess(true);\r\n      setName(\"\");\r\n      setUsername(\"\");\r\n      setPassword(\"\");\r\n      setEmail(\"\");\r\n      setSuccessMessage(answer.message);\r\n      Cookies.set('userID', answer.userID, {expires: 3})\r\n      setUserID(answer.userID)\r\n      setTimeout(() => {\r\n        history.push(\"/\");\r\n      }, 1);\r\n    } else {\r\n      setErrorMessage(answer.message);\r\n      setIsError(true);\r\n    }\r\n  });\r\n\r\n\r\n  socket.on('sendValidationCodeAnswer', ({message, success})=>{\r\n    if(success){\r\n      setSuccessMessage(message)\r\n    }else{\r\n      setErrorMessage(message)\r\n      setIsError(true)\r\n    }\r\n\r\n})\r\n\r\n  return (\r\n    <>\r\n\r\n      <div className=\"header\">\r\n        <Link to=\"/\">\r\n          <Button variant=\"outlined\" text={\"Back\"} />\r\n        </Link>\r\n      </div>\r\n          <div className=\"content\">\r\n          <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n            <div className=\"signInContainer\">\r\n              <h1>Create free account</h1>\r\n              <div className=\"signUp\">\r\n                <form autoComplete=\"off\" className=\"forms\">\r\n                  <input\r\n                    autoComplete=\"nope\"\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                    placeholder=\"Name\"\r\n                  />\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    value={username}\r\n                    onChange={(e) => setUsername(e.target.value)}\r\n                    placeholder=\"Username\"\r\n                  />\r\n                  <input\r\n                    autoComplete=\"off\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    value={password}\r\n                    placeholder=\"Password\"\r\n                  />\r\n                   <input\r\n                    autoComplete=\"off\"\r\n                    type=\"password\"\r\n                    name=\"checkPassword\"\r\n                    onChange={(e) => setCheckPassword(e.target.value)}\r\n                    value={checkPassword}\r\n                    placeholder=\"Repeat password\"\r\n                  />\r\n                  <input\r\n                    autoComplete=\"off\"\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    value={email}\r\n                    placeholder=\"Email\"\r\n                  />\r\n                  <Checkbox checked={checked} setChecked={setChecked} />\r\n                  <button\r\n                    onClick={(e) => {\r\n                      e.preventDefault();\r\n                      handleSignUp();\r\n                    }}\r\n                    style={{ display: \"none\" }}\r\n                    type=\"submit\"\r\n                  ></button>\r\n                  <Button2\r\n                    onMouseOver={() => setIsHover(true)}\r\n                    onMouseOut={() => {\r\n                      setIsHover(false);\r\n                    }}\r\n                    variant=\"outlined\"\r\n                    disabled={!checked}\r\n                    style={\r\n                      isHover\r\n                        ? buttonStyleHoverCreateAccount\r\n                        : buttonStyleCreateAccount\r\n                    }\r\n                    onClick={handleSignUp}\r\n                  >\r\n                    Create Account\r\n                  </Button2>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      \r\n\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    '& > * + *': {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function CircularIndeterminate() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CircularProgress />\r\n    </div>\r\n  );\r\n}\r\n","import \"./Login.css\";\r\nimport { useEffect, useState,useRef } from \"react\";\r\nimport Button2 from \"@material-ui/core/Button\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport anime from \"animejs/lib/anime.es.js\";\r\nimport Button from \"../SignUp/Button\";\r\nimport Cookies from \"js-cookie\";\r\nimport {DataContext} from '../../App';\r\nimport { useContext } from \"react\";\r\nimport Loading from '../Loadings/Loading';\r\n\r\nconst Login = ({turnOffBack}) => {\r\nconst {socket, setUserID, setNickname,setIsSuccess,setSuccessMessage, setIsError, setErrorMessage, setIsLoginPage} = useContext(DataContext)\r\n\r\n  const loginContainer = useRef()\r\n\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const history = useHistory();\r\n  const [isHover, setIsHover] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false)\r\n\r\n\r\n  const buttonStyleCreateAccount = {\r\n    marginTop: \"5px\",\r\n    color: \"black\",\r\n    borderColor: \"black\",\r\n    width: \"fit-content\",\r\n    alignSelf: \"center\",\r\n  };\r\n\r\n  const buttonStyleHoverCreateAccount = {\r\n    marginTop: \"5px\",\r\n    borderColor: \"#4361ee\",\r\n    width: \"fit-content\",\r\n    alignSelf: \"center\",\r\n    backgroundColor: \"#4361ee\",\r\n  };\r\n\r\n  const handleCookies = (ID) => {\r\n    Cookies.set(\"userID\", ID, { expires: 3 });\r\n  };\r\n\r\n  useEffect(() => {\r\n    anime({\r\n      targets: \".loginContainer\",\r\n      scale: [0, 1],\r\n      duration: 2000,\r\n    });\r\n  }, []);\r\n\r\n  const handleLogin = () => {\r\n    if (username && password) {\r\n      socket.emit(\"Login\", {\r\n        username,\r\n        password,\r\n      });\r\n      setIsLoading(true)\r\n    } else {\r\n      setErrorMessage(\"Check your details again\");\r\n      setIsError(true);\r\n    }\r\n  };\r\n\r\n  socket.on(\"LoginAnswer\", (answer) => {\r\n    if (answer.success) {\r\n      setNickname(username);\r\n      setUsername(\"\");\r\n      setPassword(\"\");\r\n      setIsSuccess(true);\r\n      setSuccessMessage(answer.message);\r\n      handleCookies(answer.userID);\r\n      setUserID(answer.userID);\r\n      setTimeout(() => {\r\n        history.push(\"/\");\r\n      }, 1);\r\n      setIsLoading(false)\r\n      setIsLoginPage(false) // TO TURN ON LOGIN UI\r\n    } else {\r\n      setErrorMessage(answer.message);\r\n      setIsError(true);\r\n      setIsLoading(false)\r\n      setPassword('')\r\n      // RED BOX SHADOW IF LOGIN DATA ARE WRONG\r\n      if(loginContainer.current){\r\n        loginContainer.current.style.transition = '0.3s'\r\n          loginContainer.current.style.boxShadow = '0px 0px 20px red'\r\n          setTimeout(() => {\r\n          loginContainer.current.style.boxShadow = '0px 0px 20px black'\r\n          }, 1000);\r\n        }\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n     {!turnOffBack && \r\n     <div className=\"header\">\r\n     <Link to=\"/\">\r\n       <Button variant=\"outlined\" text={\"Back\"} />\r\n     </Link>\r\n   </div>\r\n     } \r\n      <div className=\"loginContent\">\r\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n          <div ref={loginContainer} className=\"loginContainer\">\r\n            <h1>Log in to your account</h1>\r\n            <div className=\"login\">\r\n              <form autoComplete=\"off\" className=\"forms\">\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"username\"\r\n                  value={username}\r\n                  onChange={(e) => setUsername(e.target.value)}\r\n                  placeholder=\"Username\"\r\n                />\r\n                <input\r\n                  autoComplete=\"off\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  value={password}\r\n                  placeholder=\"Password\"\r\n                />\r\n                <button\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    handleLogin();\r\n                  }}\r\n                  style={{ display: \"none\" }}\r\n                  type=\"submit\"\r\n                ></button>\r\n                <Button2\r\n                  onMouseOver={() => setIsHover(true)}\r\n                  onMouseOut={() => {\r\n                    setIsHover(false);\r\n                  }}\r\n                  variant=\"outlined\"\r\n                  style={\r\n                    isHover\r\n                      ? buttonStyleHoverCreateAccount\r\n                      : buttonStyleCreateAccount\r\n                  }\r\n                  onClick={handleLogin}\r\n                >\r\n                  Login\r\n                </Button2>\r\n                \r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"loadingContainer\">\r\n                {isLoading &&  <Loading/>}\r\n        </div>\r\n\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import {DataContext} from '../../App';\r\nimport { useContext } from \"react\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst AccountInfo = () => {\r\n    const {userData} = useContext(DataContext)\r\n    const {name, username, email, accountCreated, isVerified} = userData;\r\n\r\n    return ( \r\n    <div className=\"accountInfo\">\r\n            <div>Name: {name}</div>\r\n              <div>Username: {username}</div>\r\n              <div>Password: ******</div>\r\n              <div>Email: {email}</div>\r\n              <div>Account created: {accountCreated}</div>\r\n              {isVerified ? \r\n              <div style={{color :'#90be6d'}}>Your account is verifed\r\n              </div> \r\n              : \r\n              <Link to=\"/activate\">\r\n                <div style={{color:'#f94144'}}>Click here to verify your account. And check your email!</div>\r\n              </Link>  \r\n              } \r\n\r\n    </div>\r\n     );\r\n}\r\n \r\nexport default AccountInfo;","import { useState } from \"react\";\r\nimport Button from \"../SignUp/Button\";\r\nimport \"./ChangePassword.css\";\r\nimport { DataContext } from \"../../App\";\r\nimport { useContext } from \"react\";\r\n\r\nconst ChangePassowrd = () => {\r\n  const {\r\n    socket,\r\n    userID,\r\n    setIsSuccess,\r\n    setSuccessMessage,\r\n    setIsError,\r\n    setErrorMessage,\r\n  } = useContext(DataContext);\r\n  const [oldPassword, setOldPassword] = useState(\"\");\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [code, setCode] = useState(\"\");\r\n  const [changePasswordClicked, setChangePasswordClicked] = useState(false)\r\n  const handleChangePassword = (e) => {\r\n    e.preventDefault();\r\n    if (userID && oldPassword && newPassword && code) {\r\n      socket.emit(\"changePassword\", { userID, oldPassword, newPassword, code });\r\n    } else {\r\n      setIsError(true);\r\n      setErrorMessage(\"Check it one more time\");\r\n    }\r\n  };\r\n\r\n// REQUEST TO GENERATE CODE TO CHANGE PASSWORD\r\n  const changePasswordCode = () =>{\r\n      socket.emit('changePasswordCode', {userID})\r\n      setChangePasswordClicked(true)\r\n  }\r\n\r\n  socket.on('changePasswordCodeAnswer', ({message, success})=>{\r\n    if(success){\r\n        setIsSuccess(success)\r\n        setSuccessMessage(message)\r\n    }\r\n  })\r\n  \r\n\r\n  socket.on(\"changePasswordAnswer\", ({ message, success }) => {\r\n    if (success) {\r\n      setIsSuccess(success);\r\n      setSuccessMessage(message);\r\n      setOldPassword(\"\");\r\n      setNewPassword(\"\");\r\n      setCode('')\r\n    } else {\r\n      setIsError(true);\r\n      setErrorMessage(message);\r\n    }\r\n  });\r\n\r\n\r\n  const divStyle = { width: \"fit-content\", height:'fit-content', alignSelf:'center', padding:'15px 20px',backgroundColor:'transparent' }\r\n\r\n  return (\r\n    <>\r\n\r\n\r\n      <div className=\"changePassword\">\r\n          <h2>CHANGE PASSWORD</h2>\r\n        {changePasswordClicked ?\r\n        <form>\r\n        <input\r\n          type=\"password\"\r\n          value={oldPassword}\r\n          onChange={(e) => {\r\n            setOldPassword(e.target.value);\r\n          }}\r\n          placeholder=\"Old password\"\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          value={newPassword}\r\n          onChange={(e) => {\r\n            setNewPassword(e.target.value);\r\n          }}\r\n          placeholder=\"New password\"\r\n        />\r\n         <input\r\n          type=\"text\"\r\n          value={code}\r\n          onChange={(e) => {\r\n            setCode(e.target.value);\r\n          }}\r\n          placeholder=\"Code from email\"\r\n        />\r\n        <div style={{ width: \"fit-content\"}}>\r\n        <Button\r\n              onClick={handleChangePassword}\r\n              style={{width:'100%'}}\r\n              text='Change password'/>\r\n          <button\r\n            style={{ display: \"none\" }}\r\n            onClick={handleChangePassword}\r\n            type=\"submit\"\r\n          ></button>\r\n        </div>\r\n      </form>\r\n        :\r\n        <div style={divStyle}>\r\n        <Button text={'Send code to email!'} onClick={changePasswordCode}/> \r\n </div>\r\n        }\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChangePassowrd;\r\n","import { useState } from \"react\";\r\nimport Button from \"../SignUp/Button\";\r\nimport \"./ChangeEmail.css\";\r\nimport { DataContext } from \"../../App\";\r\nimport { useContext } from \"react\";\r\n\r\nconst ChangePassowrd = () => {\r\n  const {\r\n    socket,\r\n    userID,\r\n    setIsSuccess,\r\n    setSuccessMessage,\r\n    setIsError,\r\n    setErrorMessage,\r\n  } = useContext(DataContext);\r\n  const [newEmail, setNewEmail] = useState(\"\");\r\n  const [code, setCode] = useState(\"\");\r\n  const [changeEmailClicked, setChangeEmailClicked] = useState(false)\r\n\r\n\r\n  const handleChangeEmail = (e) => {\r\n    e.preventDefault();\r\n    if (userID && newEmail && code) {\r\n       if(newEmail.includes('@')){\r\n        socket.emit(\"changeEmail\", { userID, newEmail, code });\r\n\r\n       } else{\r\n           setIsError(true)\r\n           setErrorMessage('Check your new email!')\r\n       }\r\n    } else {\r\n      setIsError(true);\r\n      setErrorMessage(\"Check it one more time\");\r\n    }\r\n  };\r\n// REQUEST TO GENERATE CODE TO CHANGE EMAIL\r\n  const changeEmailCode = () =>{\r\n        socket.emit('changeEmailCode', {userID})\r\n        setChangeEmailClicked(true)\r\n  }\r\n\r\n  socket.on('changeEmailCodeAnswer', ({message, success})=>{\r\n    if(success){\r\n        setIsSuccess(success)\r\n        setSuccessMessage(message)\r\n    }\r\n  })\r\n  \r\n\r\n  socket.on(\"changeEmailAnswer\", ({ message, success }) => {\r\n    if (success) {\r\n      setIsSuccess(success);\r\n      setSuccessMessage(message);\r\n      setNewEmail(\"\");\r\n      setCode('')\r\n    } else {\r\n      setIsError(true);\r\n      setErrorMessage(message);\r\n    }\r\n  });\r\n\r\n\r\n  const divStyle = { width: \"fit-content\", height:'fit-content', alignSelf:'center', padding:'15px 20px',backgroundColor:'transparent' }\r\n\r\n  return (\r\n    <>\r\n\r\n\r\n      <div className=\"changeEmail\">\r\n          <h2>CHANGE EMAIL</h2>\r\n        {changeEmailClicked ?\r\n        <form>\r\n        <input\r\n          type=\"text\"\r\n          value={newEmail}\r\n          onChange={(e) => {\r\n            setNewEmail(e.target.value);\r\n          }}\r\n          placeholder=\"New email\"\r\n        />\r\n         <input\r\n          type=\"text\"\r\n          value={code}\r\n          onChange={(e) => {\r\n            setCode(e.target.value);\r\n          }}\r\n          placeholder=\"Code from email\"\r\n        />\r\n        <div style={{ width: \"fit-content\" }}>\r\n        <Button\r\n              onClick={handleChangeEmail}\r\n              style={{width:'100%'}}\r\n              text='Change password'/>\r\n          <button\r\n            style={{ display: \"none\" }}\r\n            onClick={handleChangeEmail}\r\n            type=\"submit\"\r\n          ></button>\r\n        </div>\r\n      </form>\r\n        :\r\n        <div style={divStyle}>\r\n        <Button text={'Send code to email!'} onClick={changeEmailCode}/> \r\n </div>\r\n        }\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChangePassowrd;\r\n","import \"./Account.css\"\r\nimport {Link} from 'react-router-dom';\r\nimport Button from '../SignUp/Button';\r\nimport {DataContext} from '../../App';\r\nimport { useContext, useState } from \"react\";\r\nimport AccountInfo from './AccountInfo';\r\nimport ChangePassword from './ChangePassword';\r\nimport ChangeEmail from './ChangeEmail';\r\n\r\nconst Profile = () => {\r\n  const {userData} = useContext(DataContext)\r\n  const {name} = userData;\r\n  const [whichContent, setWhichContent] = useState('Account')\r\n\r\n  const handleSetRightPanel = (e)=> {\r\n    // console.log(e.target);\r\n    if(e.target.className === \"leftPanelItem\"){\r\n      setWhichContent(e.target.textContent)\r\n    }\r\n  }\r\n\r\n    return ( \r\n        <>\r\n        <div className=\"header\">\r\n        <Link to=\"/\">\r\n          <Button variant=\"outlined\" text={\"Back\"} />\r\n        </Link>\r\n      </div>\r\n      <div className=\"accountContent\">\r\n       <h1>Hello, {name}</h1>  \r\n          <div className=\"account\">\r\n            <div onClick={(e)=>{handleSetRightPanel(e)}} className=\"leftPanel\">\r\n              <p className=\"leftPanelItem\">Account</p>\r\n              <p className=\"leftPanelItem\">Change Password</p>\r\n              <p className=\"leftPanelItem\">Change Email</p>\r\n            </div>\r\n            <div className=\"rightPanel\">\r\n            {whichContent === \"Account\" &&  <AccountInfo/>} \r\n            {whichContent === \"Change Password\" &&  <ChangePassword/>} \r\n            {whichContent === \"Change Email\" &&  <ChangeEmail/>} \r\n\r\n            </div>\r\n          </div>\r\n      </div>\r\n      </>\r\n     );\r\n}\r\n \r\nexport default Profile;\r\n","import IconButton from \"@material-ui/core/IconButton\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { useRef, useState, useContext } from \"react\";\r\nimport {DataContext} from \"../App\"\r\n\r\nimport \"./Party.css\";\r\n\r\n\r\n\r\n\r\nconst Party = ({ name, users, maxUsers, color,dateCreated,creator,partyID, text, join }) => {\r\n  const [isHovered, setIsHovered] = useState();\r\nconst {userID, socket, setIsError, setErrorMessage} = useContext(DataContext)\r\n\r\n\r\n\r\n\r\n  const hoverStyle = {\r\n    boxShadow: `0px 0px 20px ${color}`,\r\n    borderColor: color,\r\n  };\r\n\r\n  const style = {};\r\n  const joinButton = useRef()\r\n\r\n\r\n\r\n  const joinParty = () =>{\r\n   const partyID = joinButton.current.dataset.id\r\n   if(userID && partyID){\r\n         socket.emit('joinParty', {userID, partyID})\r\n   }else{\r\n    setIsError(true)\r\n    setErrorMessage('Please login!')\r\n   }\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <div\r\n      className=\"party\"\r\n      style={isHovered ? hoverStyle : style}\r\n      onMouseOver={() => setIsHovered(true)}\r\n      onMouseLeave={() => setIsHovered(false)}\r\n      >\r\n\r\n\r\n      <h1>{name}</h1>\r\n\r\n\r\n     {/* MADE FOR MYPARTIES WITH OUT + BUTTON */}\r\n     {join && <div \r\n      style={{display:'flex', flexDirection:'column', width:'fit-content', alignSelf:'center'}}\r\n      >\r\n        <IconButton \r\n        onClick={joinParty}\r\n        data-id={partyID} \r\n        ref={joinButton} \r\n        style={{ color: \"white\" }}>\r\n          <AddIcon style={{ color: \"white\", fontSize: \"50px\" }} />\r\n        </IconButton>\r\n        JOIN\r\n      </div>}\r\n\r\n      <h2>\r\n      {text}\r\n      </h2>\r\n      <span>Users: {users.length}/{maxUsers}</span>\r\n      <span>Created: {dateCreated}</span>\r\n      <span>Created by: {creator}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Party;\r\n","\r\nconst MyPartiesSchema = ({parties, streamingPlatform}) => {\r\n    return ( \r\n        <>  {parties.length > 0 && \r\n            <div className=\"myPartiesColumn\">\r\n            <h2>{streamingPlatform}</h2>\r\n            {parties}\r\n        </div>\r\n            }\r\n        </>\r\n     );\r\n}\r\n \r\nexport default MyPartiesSchema;","import \"./MyParties.css\"\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"../SignUp/Button\"\r\nimport {DataContext} from \"../../App\"\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport Party from \"../Party\"\r\nimport MyPartiesSchema from './MyPartiesSchema';\r\nimport Loading from '../Loadings/Loading';\r\n\r\n\r\nconst MyParties = () => {\r\n\r\n    const {userData,socket} = useContext(DataContext)\r\n    const [myPartiesData, setMyPartiesData] = useState([])\r\n\r\n\r\n    useEffect(()=>{\r\n        socket.emit('getMyParties', userData.myParties)\r\n\r\n          return ()=>{\r\n            setMyPartiesData([])\r\n          }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[])\r\n\r\n    socket.on('getMyPartiesAnswer', (partiesAnswer)=>{\r\n    setMyPartiesData(partiesAnswer)\r\n    })\r\n    \r\n    // sorting Parties\r\n    let netflixParties = [], spotifyParties=[], hbogoParties=[], disneyParties=[];\r\n\r\n    myPartiesData.forEach((party)=>{\r\n      switch (party.streamingPlatform) {\r\n        case 'Netflix':\r\n          netflixParties.push(party) \r\n          break;\r\n\r\n        case 'Spotify':\r\n          spotifyParties.push(party) \r\n          break;\r\n\r\n        case 'HBOGO':\r\n          hbogoParties.push(party) \r\n          break;\r\n\r\n        case 'Disney+':\r\n          disneyParties.push(party) \r\n          break; \r\n      \r\n        default:\r\n          console.log('streaming Party Error');\r\n          break;\r\n      }\r\n    })\r\n\r\n     netflixParties = netflixParties.map((party) => {\r\n        let color\r\n        // CHOOSE RIGTH COLOR FOR ALL PLATFORMS\r\n       switch (party.streamingPlatform) {\r\n            case 'Netflix':\r\n                color = \"#e50914\"\r\n                break;\r\n            case 'Spotify':\r\n                color = '#1DB954'\r\n                break;\r\n\r\n            case 'HBO GO':\r\n                color= 'white'\r\n                break ;\r\n            case 'Disney +':\r\n                color= '#113CCF'\r\n                break;\r\n            default:\r\n                color=\"white\"\r\n                break;\r\n        }\r\n       return (\r\n         <Link to={`/party/${party._id}`}>\r\n          <Party\r\n          join={false}\r\n          key={party._id}\r\n          partyID={party._id}\r\n          name={party.partyName}\r\n          text={party.textContent}\r\n          users={party.users}\r\n          maxUsers={party.maxUsers}\r\n          creator={party.creatorUsername}\r\n          dateCreated={party.dateCreated}\r\n          color={color}\r\n        />\r\n         </Link>\r\n\r\n      )});\r\n\r\n      spotifyParties = spotifyParties.map((party) => {\r\n        let color\r\n        // CHOOSE RIGTH COLOR FOR ALL PLATFORMS\r\n       switch (party.streamingPlatform) {\r\n            case 'Netflix':\r\n                color = \"#e50914\"\r\n                break;\r\n            case 'Spotify':\r\n                color = '#1DB954'\r\n                break;\r\n\r\n            case 'HBO GO':\r\n                color= 'white'\r\n                break ;\r\n            case 'Disney +':\r\n                color= '#113CCF'\r\n                break;\r\n            default:\r\n                color=\"white\"\r\n                break;\r\n        }\r\n       return (\r\n        <Link to={`/party/${party._id}`}>\r\n          <Party\r\n          join={false}\r\n          key={party._id}\r\n          partyID={party._id}\r\n          name={party.partyName}\r\n          text={party.textContent}\r\n          users={party.users}\r\n          maxUsers={party.maxUsers}\r\n          creator={party.creatorUsername}\r\n          dateCreated={party.dateCreated}\r\n          color={color}\r\n          />\r\n        </Link>\r\n      )});\r\n\r\n      hbogoParties = hbogoParties.map((party) => {\r\n        let color\r\n        // CHOOSE RIGTH COLOR FOR ALL PLATFORMS\r\n       switch (party.streamingPlatform) {\r\n            case 'Netflix':\r\n                color = \"#e50914\"\r\n                break;\r\n            case 'Spotify':\r\n                color = '#1DB954'\r\n                break;\r\n\r\n            case 'HBO GO':\r\n                color= 'white'\r\n                break ;\r\n            case 'Disney +':\r\n                color= '#113CCF'\r\n                break;\r\n            default:\r\n                color=\"white\"\r\n                break;\r\n        }\r\n       return (\r\n        <Link to={`/party/${party._id}`}>\r\n        <Party\r\n        join={false}\r\n        key={party._id}\r\n        partyID={party._id}\r\n        name={party.partyName}\r\n        text={party.textContent}\r\n        users={party.users}\r\n        maxUsers={party.maxUsers}\r\n        creator={party.creatorUsername}\r\n        dateCreated={party.dateCreated}\r\n        color={color}\r\n        />\r\n      </Link>\r\n      )});\r\n\r\n      disneyParties = disneyParties.map((party) => {\r\n        let color\r\n        // CHOOSE RIGTH COLOR FOR ALL PLATFORMS\r\n       switch (party.streamingPlatform) {\r\n            case 'Netflix':\r\n                color = \"#e50914\"\r\n                break;\r\n            case 'Spotify':\r\n                color = '#1DB954'\r\n                break;\r\n\r\n            case 'HBO GO':\r\n                color= 'white'\r\n                break ;\r\n            case 'Disney+':\r\n                color= '#113CCF'\r\n                break;\r\n            default:\r\n                color=\"white\"\r\n                break;\r\n        }\r\n       return (\r\n        <Link to={`/party/${party._id}`}>\r\n          <Party\r\n          join={false}\r\n          key={party._id}\r\n          partyID={party._id}\r\n          name={party.partyName}\r\n          text={party.textContent}\r\n          users={party.users}\r\n          maxUsers={party.maxUsers}\r\n          creator={party.creatorUsername}\r\n          dateCreated={party.dateCreated}\r\n          color={color}\r\n          />\r\n        </Link>\r\n      )});\r\n\r\n      return ( \r\n        <>\r\n        <div className=\"header\">\r\n          <Link to=\"/\">\r\n            <Button variant=\"outlined\" text={\"Back\"} />\r\n          </Link>\r\n        </div>\r\n       {myPartiesData ? \r\n       <div className=\"myPartiesContent\">\r\n       <h1>My Parties</h1>\r\n\r\n           <div className=\"myParties\">\r\n           <MyPartiesSchema  parties={netflixParties} streamingPlatform={'Netflix'}/>\r\n           <MyPartiesSchema  parties={spotifyParties} streamingPlatform={'Spotify'}/>\r\n           <MyPartiesSchema  parties={hbogoParties} streamingPlatform={'HBO GO'}/>\r\n           <MyPartiesSchema  parties={disneyParties} streamingPlatform={'Disney+'}/>\r\n           </div>\r\n       </div>\r\n       :\r\n       <div className=\"myPartiesLoading\">\r\n                 <Loading/>\r\n       </div>\r\n       } \r\n        </>\r\n     );\r\n}\r\n \r\nexport default MyParties;","import { useContext, useState } from \"react\";\r\nimport Button from '../SignUp/Button';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {DataContext} from '../../App';\r\n\r\n\r\n\r\nconst ConfirmAccount = () => {\r\n\r\n    const {socket, userID, setIsSuccess, setIsError,setErrorMessage, setSuccessMessage} = useContext(DataContext)\r\n\r\n\r\n    const [ValidateToken, setValidateToken] = useState('')\r\n    const [redirect, setRedirect] = useState(false)\r\n\r\n\r\n    const handleSendCode= (e) =>{\r\n        e.preventDefault()\r\n        if(ValidateToken){\r\n        socket.emit('sendValidationCode', {userID, ValidateToken})\r\n    }}\r\n\r\n    socket.on('sendValidationCodeAnswer', ({message, success})=>{\r\n        if(success){\r\n        setIsSuccess(success)\r\n        setSuccessMessage(message)\r\n        setRedirect(success)\r\n        }else{\r\n            setIsError(true)\r\n            setErrorMessage(message)\r\n        }\r\n    })\r\n\r\n\r\n\r\n    return ( \r\n        <>\r\n      {redirect ?  <Redirect to=\"/\"/> : false} \r\n        <div className='confirmAccount'>\r\n            <h1>Confirm your account</h1>\r\n            <form>\r\n                <input type=\"text\" placeholder=\"Put code from your email\" onChange={(e)=>setValidateToken(e.target.value)} value={ValidateToken}/>\r\n                <button style={{display:'none'}} onClick={(e)=>{handleSendCode(e)}} type=\"submit\"></button>\r\n                \r\n            </form>\r\n            <Button text={'Confirm'} onClick={handleSendCode}/>\r\n\r\n        </div>\r\n        </>\r\n     );\r\n}\r\n \r\nexport default ConfirmAccount;","import React from \"react\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {DataContext} from \"../../App\"\r\nimport {useContext} from 'react';\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function CustomizedSnackbars() {\r\n  const {isSuccess, setIsSuccess, successMessage} = useContext(DataContext)\r\n  const classes = useStyles();\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setIsSuccess(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Snackbar open={isSuccess} autoHideDuration={4000} onClose={handleClose}>\r\n        <Alert onClose={()=>setIsSuccess(false)} severity=\"success\">\r\n          {successMessage ? successMessage : \"Success\"}\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    padding: '15px 20px',\r\n    '& > * + *': {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function CircularIndeterminate() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CircularProgress />\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"../SignUp/Button\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport { blue } from \"@material-ui/core/colors\";\r\n\r\nlet usersCopy;\r\nconst emails = [\"username@gmail.com\", \"user02@gmail.com\"];\r\nconst useStyles = makeStyles({\r\n  avatar: {\r\n    backgroundColor: blue[100],\r\n    color: blue[600],\r\n  },\r\n});\r\n\r\n\r\nfunction SimpleDialog(props) {\r\n  const classes = useStyles();\r\n  const { onClose, selectedValue, open } = props;\r\n\r\n  const handleClose = () => {\r\n    onClose(selectedValue);\r\n  };\r\n\r\n  const handleListItemClick = (value) => {\r\n    onClose(value);\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      className={classes.root}\r\n      style={{ color: \"red\" }}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"simple-dialog-title\"\r\n      open={open}\r\n    >\r\n      <DialogTitle id=\"simple-dialog-title\">Users in the party</DialogTitle>\r\n      <List>\r\n        {usersCopy.map((user) => (\r\n          <ListItem button onClick={() => handleListItemClick(user)} key={user}>\r\n            <ListItemAvatar>\r\n              <Avatar className={classes.avatar}>\r\n                <PersonIcon />\r\n              </Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText primary={user} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nSimpleDialog.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n  selectedValue: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default function SimpleDialogDemo({ users }) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [selectedValue, setSelectedValue] = React.useState(emails[1]);\r\n\r\n  usersCopy = users;\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (value) => {\r\n    setOpen(false);\r\n    setSelectedValue(value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* <Typography variant=\"subtitle1\">Selected: {selectedValue}</Typography> */}\r\n      <Button\r\n        text=\"USERS\"\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n        onClick={handleClickOpen}\r\n      ></Button>\r\n      <SimpleDialog\r\n        selectedValue={selectedValue}\r\n        open={open}\r\n        onClose={handleClose}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import Party from \"./Party\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"./SignUp/Button\";\r\nimport { DataContext } from \"../App\";\r\nimport { useContext, useEffect, useRef, useState } from \"react\";\r\nimport Progress from \"./Progress\";\r\nimport \"./StreamingPlatformComp.css\";\r\n\r\nconst StreamingPlatformComp = ({color, streamingPlatform}) => {\r\n  const [isCreatePartyContainer, setIsCreatePartyContainer] = useState(false);\r\n  const [text, setText] = useState('');\r\n  const [maxUsers, setMaxUsers] = useState('');\r\n  const [partiesData, setPartiesData] = useState([]);\r\n\r\n  const {\r\n    handleCreateParty,\r\n    userID,\r\n    socket,\r\n    setIsSuccess,\r\n    setIsError,\r\n    setSuccessMessage,\r\n    setErrorMessage,\r\n    nickname,\r\n  } = useContext(DataContext);\r\n  const [partyName, setPartyName] = useState(`${nickname}'s party`);\r\n\r\n\r\n  const createPartyContainer = useRef();\r\n\r\n  const handleCloseContainer = (e) => {\r\n    if (isCreatePartyContainer) {\r\n      if (!createPartyContainer.current.contains(e.target)) {\r\n        setIsCreatePartyContainer(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket.emit(\"getPartiesData\", streamingPlatform);\r\n\r\n    return ()=>{\r\n      setPartiesData([])\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  socket.on(\"getParitesDataAnswer\", (docs) => {\r\n    setPartiesData(docs);\r\n  });\r\n  // WHEN SOMEONE WILL ADD NEW PARTY\r\n  socket.on(\"newPartyAddedAnswer\", ({ addedParty }) => {\r\n    if (addedParty.streamingPlatform === streamingPlatform) {\r\n      setPartiesData([...partiesData, addedParty]);\r\n    }\r\n  });\r\n\r\n  socket.on(\"joinPartyAnswer\", ({ message, success }) => {\r\n    \r\n    if (success) {\r\n      setIsSuccess(true);\r\n      setSuccessMessage(message);\r\n    } else {\r\n      setIsError(true);\r\n      setErrorMessage(message);\r\n    }\r\n  });\r\n\r\n  socket.on('updateParty', ({partyChanged})=>{\r\n    let deletedIndex;\r\n    const oldPartiesData = partiesData.filter((party, index)=>{\r\n      if(party._id === partyChanged._id){\r\n        deletedIndex = index\r\n      }\r\n     return party._id !== partyChanged._id\r\n    });\r\n    oldPartiesData.splice(deletedIndex, 0, partyChanged)\r\n    setPartiesData(oldPartiesData)\r\n  })\r\n\r\n\r\n  socket.on(\"createPartyAnswer\", ({ message, success }) => {\r\n    if (success) {\r\n      setIsSuccess(true);\r\n      setSuccessMessage(message);\r\n      setPartyName(\"\");\r\n      setText(\"\");\r\n      setMaxUsers(\"\");\r\n      setIsCreatePartyContainer(false);\r\n    } else {\r\n      setIsError(true);\r\n      setErrorMessage(message);\r\n    }\r\n  });\r\n\r\n  const list = partiesData.map((party) => (\r\n    <Party\r\n      join={true}\r\n      key={party._id}\r\n      partyID={party._id}\r\n      name={party.partyName}\r\n      text={party.textContent}\r\n      users={party.users}\r\n      maxUsers={party.maxUsers}\r\n      creator={party.creatorUsername}\r\n      dateCreated={party.dateCreated}\r\n      color={color}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <>\r\n      <div onClick={handleCloseContainer} style={{ height: \"100%\" }}>\r\n        <div className=\"header\">\r\n          <Link to=\"/\">\r\n            <Button variant=\"outlined\" text={\"Back\"} />\r\n          </Link>\r\n        </div>\r\n        <div className=\"streamingContent\">\r\n          <div className=\"partiesContainer\">\r\n            <h1>{streamingPlatform} Families</h1>\r\n            <Button\r\n              text={\"Create own party\"}\r\n              onClick={() => {\r\n                setIsCreatePartyContainer((prev) => !prev);\r\n              }}\r\n            />\r\n\r\n            {list ? <div className=\"Parties\">{list}</div> : <Progress />}\r\n          </div>\r\n        </div>\r\n\r\n        {isCreatePartyContainer && (\r\n          <div className=\"createPartyContainer\" ref={createPartyContainer}>\r\n            <form>\r\n              <input\r\n                ref={createPartyContainer}\r\n                type=\"text\"\r\n                placeholder=\"Party name\"\r\n                onChange={(e) => setPartyName(e.target.value)}\r\n                value={partyName}\r\n              />\r\n\r\n              <input\r\n                ref={createPartyContainer}\r\n                type=\"text\"\r\n                placeholder=\"Text\"\r\n                onChange={(e) => setText(e.target.value)}\r\n                value={text}\r\n              />\r\n              <input\r\n                type=\"number\"\r\n                style={{ width: \"263px\" }}\r\n                max={5}\r\n                min={1}\r\n                placeholder=\"How many friends\"\r\n                onChange={(e) => setMaxUsers(e.target.value)}\r\n                value={maxUsers}\r\n              />\r\n              <button onClick={(e)=>{\r\n                e.preventDefault()\r\n                handleCreateParty(userID, partyName, text, maxUsers,streamingPlatform)\r\n              }} style={{display:'none'}} type=\"submit\"></button>\r\n              <Button\r\n                text=\"Create\"\r\n                onClick={() =>\r\n                  handleCreateParty(\r\n                    userID,\r\n                    partyName,\r\n                    text,\r\n                    maxUsers,\r\n                    streamingPlatform\r\n                  )\r\n                }\r\n              />\r\n            </form>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StreamingPlatformComp;\r\n","const Message = ({time, nickname, message, myMessage}) => {\r\n\r\n\r\n    return (\r\n        <>\r\n        {myMessage ?\r\n                <div title={time} style={{alignSelf:'flex-end'}}>\r\n                <p style={{borderRadius:'20px 20px 0px 20px'}}>{message}</p>\r\n                </div> \r\n                \r\n        : \r\n                <>\r\n                {/* MADE FOR USER LEFT PARTY */}\r\n                {nickname === \"\" ? \r\n                <div title={time}>\r\n                <p style={{color:'grey',borderColor:'grey'}}>{message}</p>\r\n                </div>\r\n                :\r\n                <div title={time}>\r\n                <p><span>{nickname} : </span> {' '}{message}</p>\r\n                </div>\r\n                }\r\n                \r\n                </>\r\n                }\r\n        \r\n        </>\r\n     );\r\n}\r\n \r\nexport default Message;","import \"./Chat.css\"\r\nimport {DataContext} from \"../../App\"\r\nimport { useContext, useEffect, useRef } from \"react\";\r\nimport Message from './Message';\r\n\r\n\r\nconst Chat = ({chat}) => {\r\n    const {nickname} = useContext(DataContext)\r\n\r\n    const chatRef = useRef()\r\n\r\n          const createMessages = chat.map((message,index)=>{\r\n              let myMessage = false;\r\n            if(message.nickname === nickname){\r\n                myMessage = true;\r\n            }\r\n            return (\r\n            <Message key={index} index={index} myMessage={myMessage} nickname={message.nickname} message={message.message} time={message.time}/>\r\n            )  \r\n            \r\n            })  \r\n\r\n\r\n        useEffect(()=>{\r\n\r\n            // AUTO SCROLL TO BOTTOM WHEN SOMEONE WRITE MESSAGE\r\n            chatRef.current.scrollTo({top:chatRef.current.scrollHeight})\r\n        },[chat])\r\n   \r\n\r\n\r\n    return ( \r\n        <div ref={chatRef} className=\"chat\" >\r\n           {createMessages ? createMessages : \"There are no messages\"} \r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Chat;    ","import \"./PartyInfo.css\";\r\nimport { DataContext } from \"../../App\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport Button from \"../SignUp/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loading from \"../Loadings/Loading\";\r\n// import Avatar from '@material-ui/core/Avatar';\r\nimport Chat from \"./Chat\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Dialog from \"./Dialog\";\r\n\r\nconst PartyInfo = (props) => {\r\n  const { partyID } = useParams();\r\n  const {\r\n    socket,\r\n    nickname,\r\n    setIsError,\r\n    setErrorMessage,\r\n    userID,\r\n    setIsSuccess,\r\n    setSuccessMessage,\r\n  } = useContext(DataContext);\r\n  const history = useHistory();\r\n\r\n  const [partyData, setPartyData] = useState();\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (partyID && nickname) {\r\n      socket.emit(\"getParty\", { partyID, nickname });\r\n    }\r\n  }, [nickname, partyID, socket]);\r\n\r\n  socket.on(\"getPartyAnswer\", ({ docs, success, message }) => {\r\n    if (success) {\r\n      setPartyData(docs);\r\n    } else {\r\n      setIsError(true);\r\n      setErrorMessage(message);\r\n    }\r\n  });\r\n\r\n  socket.on(`messageAnswer${partyID}`, (docs) => {\r\n    setPartyData(docs);\r\n  });\r\n\r\n  const handleSendMessage = (e) => {\r\n    if (e) {\r\n      e.preventDefault();\r\n    }\r\n    if (message && partyID && nickname) {\r\n      socket.emit(\"messageSend\", { message, partyID, nickname });\r\n    }\r\n    setMessage(\"\");\r\n  };\r\n\r\n  const handleLeaveParty = () => {\r\n    socket.emit(\"leaveParty\", { nickname, partyID, userID });\r\n  };\r\n\r\n  socket.on(\"leavePartyAnswer\", ({ message, success }) => {\r\n    if (success) {\r\n      setIsSuccess(true);\r\n      setSuccessMessage(message);\r\n      history.push(\"/\");\r\n    } else {\r\n      setIsError(true);\r\n      setErrorMessage(\"Error\");\r\n    }\r\n  });\r\n\r\n  //     let createUsersAvatars;\r\n  //     if(partyData){\r\n  //             createUsersAvatars = partyData.users.map((user, index) =>{\r\n  //    return(\r\n  //        <Avatar key={index} style={{color:'black', border: '1px solid white'}} title={user}>{user[0].toUpperCase()}</Avatar>\r\n  //    )})\r\n  //     }\r\n  return (\r\n    <>\r\n      <div className=\"header\">\r\n        <Link to=\"/myParties\">\r\n          <Button variant=\"outlined\" text={\"Back\"} />\r\n        </Link>\r\n      </div>\r\n      {partyData ? (\r\n        <div className=\"partyInfoContainer\">\r\n          <div className=\"partyInfo\">\r\n            <div className=\"partyName\">\r\n              <div className=\"info\">\r\n                <h1>{partyData.partyName}</h1>\r\n                <span className=\"partyName__createdBy\">\r\n                  Created by: {partyData.creatorUsername} |{\" \"}\r\n                  {partyData.dateCreated}\r\n                </span>\r\n              </div>\r\n\r\n              <div className=\"partyInfoButtons\">\r\n                {/* <Button text={'USERS'}/> */}\r\n                <Dialog users={partyData.users} />\r\n                <Button onClick={handleLeaveParty} text={\"LEAVE PARTY\"} />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"partyUsers\"></div>\r\n            <div className=\"chatAndUsersContainer\">\r\n              <div className=\"chatContainer\">\r\n                <Chat chat={partyData.chat} />\r\n                <form>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={message}\r\n                    onChange={(e) => setMessage(e.target.value)}\r\n                    placeholder=\"Send a message\"\r\n                  />\r\n                  <button\r\n                    onClick={(e) => handleSendMessage(e)}\r\n                    type=\"submit\"\r\n                    style={{ display: \"none\" }}\r\n                  ></button>\r\n                </form>\r\n              </div>\r\n              {/* <div className=\"userListContainer\">\r\n                        {createUsersAvatars}\r\n                    </div> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"partyInfoLoading\">\r\n          <Loading />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PartyInfo;\r\n","import React, { useContext, useRef, useState } from 'react';\r\nimport Login from './Login/Login';\r\nimport {Link} from 'react-router-dom'\r\nimport Button from './SignUp/Button';\r\nimport {DataContext} from \"../App\"\r\n\r\nimport \"./LoginPage.css\"\r\n\r\nconst LoginPage = () => {\r\n\r\n    const {socket, setIsSuccess,setIsError, setSuccessMessage} = useContext(DataContext)\r\n    const forgotPasswordCompRef = useRef()\r\n    const [forgotPasswordComp, setForgotPasswordComp] = useState(false)\r\n    const [email, setEmail] = useState('');\r\n\r\n    const handleCloseForgotPasswordComp = (e) =>{\r\n        if(forgotPasswordCompRef.current){\r\n            if (!forgotPasswordCompRef.current.contains(e.target)) {\r\n                setForgotPasswordComp(false);\r\n              }\r\n        }\r\n    }\r\n\r\n    const handleSendForgotPasswordEmail = () =>{\r\n        if(email.includes('@')){\r\n            socket.emit('forgotPasswordCode', {email})\r\n            setEmail('')\r\n            setForgotPasswordComp(false)\r\n        }else{\r\n            setIsError(true)\r\n            // setErrorMessage('')\r\n        }\r\n    }\r\n\r\n    socket.on('forgotPasswordCodeAnswer', ({message,success})=>{\r\n        if(success){\r\n            setIsSuccess(true)\r\n            setSuccessMessage(message)\r\n        }else{\r\n            setIsError(true)\r\n        }\r\n    })\r\n\r\n\r\n\r\n    return ( \r\n        <div onClick={(e)=>{handleCloseForgotPasswordComp(e)}}\r\n         className=\"firstComp\">\r\n            <div className=\"welcomeText\">\r\n               <h1 className=\"streamingFamily\">Streaming Family</h1>\r\n               <p>First website where you can find people to share your accounts!</p>\r\n            </div>\r\n            <div className=\"loginContainerFirst\">\r\n            <Login turnOffBack=\"true\"/>\r\n            <div className=\"createAccount\">\r\n                <h2>Don't have account?</h2>\r\n                <Link to=\"/signup\">\r\n                <p>Register now for free!</p>\r\n                </Link>\r\n                <hr/>\r\n                <p \r\n                className=\"forgotPasswordParagraph\"\r\n                onClick={()=>setForgotPasswordComp(true)}\r\n                >Forgot password?</p>\r\n            </div>\r\n            </div>\r\n\r\n        {/* ENTER EMAIL COMPONENT TO FORGOT PASSWORD */}\r\n            {forgotPasswordComp && \r\n            <div ref={forgotPasswordCompRef} className=\"forgotPasswordComp\">\r\n\r\n                <form autoComplete=\"off\" className=\"forms\">\r\n                <h2>Enter your account email</h2>\r\n                <input\r\n                  autoComplete=\"off\"\r\n                  type=\"text\"\r\n                  name=\"email\"\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  value={email}\r\n                  placeholder=\"Enter your email\"\r\n                />\r\n                <button\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    handleSendForgotPasswordEmail()\r\n                  }}\r\n                  style={{ display: \"none\" }}\r\n                  type=\"submit\"\r\n                ></button>\r\n                    <div style={{width:'fit-content'}}>\r\n                <Button \r\n                onClick={()=>{handleSendForgotPasswordEmail()}}\r\n                style={{color:'black', borderColor:'black'}} text='Send Code'/> \r\n                    </div>\r\n\r\n                \r\n              </form>\r\n            </div>\r\n            }\r\n            {/* END OF FORGOT COMPONENT  */}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default LoginPage;","import { useEffect, useState } from \"react\";\r\nimport Button from \"../SignUp/Button\";\r\nimport \"./RemindPassword.css\";\r\nimport { DataContext } from \"../../App\";\r\nimport { useContext } from \"react\";\r\nimport {useParams, useHistory} from \"react-router-dom\"\r\n\r\nconst RemindPassword = () => {\r\n\r\n    const history = useHistory()\r\n    const {code} = useParams()\r\n\r\n  const {\r\n    socket,\r\n    // userID,\r\n    setIsSuccess,\r\n    setSuccessMessage,\r\n    setIsError,\r\n    setErrorMessage\r\n  } = useContext(DataContext);\r\n\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordConfirm, setPasswordConfirm] = useState('')\r\n  const [tempUserID, setTempUserID] = useState('')\r\n\r\n//   const [code, setCode] = useState(\"\");\r\n\r\n// REQUEST TO GENERATE CODE TO CHANGE PASSWORD\r\n\r\n  useEffect(()=>{\r\n    socket.emit('remindPasswordCheckCode',{code})\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  },[])\r\n\r\n  socket.on('remindPasswordCheckCodeAnswer', ({success, userID})=>{\r\n      if(!success){\r\n        history.push('/')\r\n      }else{\r\n \r\n        setTempUserID(userID)\r\n\r\n      }\r\n  })\r\n\r\n  const handlePasswordChange = () =>{\r\n      if(password === passwordConfirm && tempUserID){\r\n        socket.emit('remindPasswordChange', {userID: tempUserID, password}) \r\n      }else if(password !== passwordConfirm){\r\n          setIsError(true)\r\n          setErrorMessage('Passwords are not the same')\r\n      }\r\n  } \r\n\r\n  socket.on('remindPasswordChangeAnswer', ({message, success})=>{\r\n      if(success){\r\n          setIsSuccess(true)\r\n          setSuccessMessage(message)\r\n          setPassword('');\r\n          setTimeout(() => {\r\n          history.push('/')\r\n          }, 1);\r\n      }else{\r\n          setIsError(true)\r\n\r\n      }\r\n  })\r\n\r\n    \r\n\r\n  return (\r\n    <>\r\n      <div className=\"remindPassword\">\r\n          <h2>CHANGE PASSWORD</h2>\r\n        <form>\r\n        <input\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => {\r\n            setPassword(e.target.value);\r\n          }}\r\n          placeholder=\"Password\"\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          value={passwordConfirm}\r\n          onChange={(e) => {\r\n            setPasswordConfirm(e.target.value);\r\n          }}\r\n          placeholder=\"Confirm password\"\r\n        />\r\n  \r\n        <div style={{ width: \"fit-content\"}}>\r\n        <Button\r\n              onClick={handlePasswordChange}\r\n              style={{width:'100%'}}\r\n              text='Change password'/>\r\n          <button\r\n            style={{ display: \"none\" }}\r\n            onClick={(e)=>{\r\n                e.preventDefault()\r\n                handlePasswordChange(e)}}\r\n            type=\"submit\"\r\n          ></button>\r\n        </div>\r\n      </form>\r\n      \r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RemindPassword;\r\n","import \"./App.css\";\nimport io from \"socket.io-client\";\nimport Cookies from \"js-cookie\";\nimport Homepage from \"./comp/Homepage\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Error from \"./comp/SignUp/ErrorSnackbar\";\nimport React, { useEffect, useState } from \"react\";\nimport SignUp from \"./comp/SignUp/SignUp\";\nimport Login from \"./comp/Login/Login\";\nimport Account from \"./comp/Account/Account\";\nimport MyParties from \"./comp/MyParties/MyParties\";\nimport ConfirmAccount from \"./comp/SignUp/ConfirmAccount\";\nimport Success from \"./comp/SignUp/SuccessSnackbar\";\nimport StreamingPlatformComp from \"./comp/StreamingPlatformComp\";\nimport PartyInfo from \"./comp/MyParties/PartyInfo\";\nimport LoginPage from './comp/LoginPage';\nimport RemindPassword from \"./comp/Account/RemindPassword\";\n\nconst dbURL = \"https://stormy-refuge-26952.herokuapp.com/\";\n\n// const socket = io(\"localhost:3001/\");\nconst socket = io(dbURL);\n\nexport const DataContext = React.createContext();\n\nfunction App() {\n  const [userID, setUserID] = useState();\n  const [nickname, setNickname] = useState();\n  const [userData, setUserData] = useState();\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [isError, setIsError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"Try again!\");\n  const [isLoginPage, setIsLoginPage] = useState(false)\n\n  socket.on(\"CheckUserIDAnswer\", (data) => {\n    setUserData(data);\n    setNickname(data.username);\n  });\n\n  useEffect(() => {\n    if (Cookies.get(\"userID\")) {\n      setUserID(Cookies.get(\"userID\"));\n      setTimeout(() => {\n        socket.emit(\"CheckUserID\", userID);\n      }, 1);\n    }else{\n      setIsLoginPage(true)\n    }\n  }, [userID]);\n\n  const handleCreateParty = (\n    userID,\n    partyName,\n    text,\n    maxUsers,\n    streamingPlatform\n  ) => {\n    if (userID && partyName && text && maxUsers < 6 && streamingPlatform) {\n      socket.emit(\"createParty\", {\n        userID,\n        partyName,\n        text,\n        maxUsers,\n        streamingPlatform,\n      });\n    } else if (!userID) {\n      setIsError(true);\n      setErrorMessage(\"You need to login!\");\n    } else if (maxUsers > 5) {\n      setIsError(true);\n      setErrorMessage(\"Party can have max 5 users\");\n    } else {\n      setIsError(true);\n      setErrorMessage(\"Check it one more time\");\n    }\n  };\n\n  return (\n    <>\n      <DataContext.Provider\n        value={{\n          userID,\n          setUserID,\n          nickname,\n          setNickname,\n          userData,\n          setUserData,\n          socket,\n          isSuccess,\n          setIsSuccess,\n          successMessage,\n          setSuccessMessage,\n          isError,\n          setIsError,\n          errorMessage,\n          setErrorMessage,\n          handleCreateParty,\n          setIsLoginPage\n        }}\n      >\n <div className=\"app\">\n      {isLoginPage ? // FOR NEW USERS (LOGGED OUT)\n      <>\n     \n        <Route path=\"/\" exact>\n           <LoginPage/>\n      </Route>\n   \n       <Route path=\"/signup\" exact>\n       <SignUp />\n     </Route>\n     <Route path=\"/remindpassword/:code\">\n          <RemindPassword/>\n        </Route>\n      \n     </>\n      : \n      \n      <Switch>\n        <Route path=\"/\" exact>\n          <Homepage />\n        </Route>\n       \n        <Route path=\"/login\">\n          <Login />\n        </Route>\n        <Route path=\"/LoginPage\">\n          <LoginPage/>\n        </Route>\n        <Route path=\"/account\">{userData && <Account />}</Route>\n        <Route path=\"/activate\">\n          <ConfirmAccount />\n        </Route>\n \n        <Route path=\"/myparties\">{userData && <MyParties />}</Route>\n        <Route path=\"/Netflix\">\n          <StreamingPlatformComp\n            color=\"#e50914\"\n            streamingPlatform=\"Netflix\"\n          />\n        </Route>\n        <Route path=\"/Spotify\">\n          <StreamingPlatformComp\n            color=\"#1DB954\"\n            streamingPlatform=\"Spotify\"\n          />\n        </Route>\n        <Route path=\"/HBOGO\">\n          <StreamingPlatformComp color=\"white\" streamingPlatform=\"HBOGO\" />\n        </Route>\n        <Route path=\"/Disney+\">\n          <StreamingPlatformComp\n            color=\"#113CCF\"\n            streamingPlatform=\"Disney+\"\n          />\n        </Route>\n        <Route path=\"/party/:partyID\" component={PartyInfo} />\n      </Switch>\n  \n      \n      }\n      </div>\n        \n        <Success />\n        <Error />\n      </DataContext.Provider>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { HashRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}